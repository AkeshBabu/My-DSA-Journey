Approach 1:
class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        if(n == k || k == 0) {
            return;
        }
        int[] nums2 = new int[n];
        int idx = 0;
        for(int x: nums) {
            nums2[idx++] = x;
        }
        for(int i = 0;i<n; i++) {
            nums[(i+k)%n] = nums2[i];
        }
    }
}

Appraoch 2:
class Solution {
    public void rotate(int[] arr, int k) {
        int n = arr.length;
        k = k%n;
        if(n <= k || k == 0) {
            return;
        }

        reverse(arr, 0, n-1);
        reverse(arr, 0, k-1);
        reverse(arr, k, n-1);
    }

    private void reverse(int[] arr, int i, int j) {
        while(i<j) {
            arr[i] ^= arr[j];
            arr[j] ^= arr[i];
            arr[i] ^= arr[j];
            i++;
            j--;
        }
    }
}


